[default]
[Cost Summary - Admin]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 01 5 * * *
description = Populate dvvy_charge_summary with admin charges
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = dvvy
request.ui_dispatch_view = search
search = index=dvvy_usage_summary dimension=admin*\
| bin _time span=1d\
| stats sum(admin*Percent) by group _time\
| eval activeAdminMetrics = [search index=dvvy_usage_summary dimension=admin* | stats mode(*) AS * | transpose | fields - "row 1" | rename column AS metric | search metric = "admin*Percent" | stats count(metric) AS count | dedup count | return $count]\
| rename sum(adminForwarderPercent) AS adminForwarderTally sum(adminUserPercent) AS adminUserTally sum(adminStoragePercent) AS adminStorageTally sum(adminLicensePercent) AS adminLicenseTally\
| eval adminUserTally=if(isnull(adminUserTally), 0, adminUserTally), adminForwarderTally=if(isnull(adminForwarderTally), 0, adminForwarderTally), adminLicenseTally=if(isnull(adminLicenseTally), 0, adminLicenseTally), adminStorageTally=if(isnull(adminStorageTally), 0, adminStorageTally)\
| appendcols [| inputlookup dvvyConfig | table splunkAdminCost]\
| filldown splunkAdminCost\
| eval SAL=((adminForwarderTally + adminLicenseTally + adminStorageTally + adminUserTally)/activeAdminMetrics), adminCharge=round(SAL * splunkAdminCost,2), dimension="admin"\
| table _time group adminLicenseTally adminStorageTally adminForwarderTally adminUserTally activeAdminMetrics splunkAdminCost SAL adminCharge dimension\
| collect index=dvvy_charge_summary

[Cost Summary - CPU]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 27 3 * * *
description = Populate dvvy_charge_summary with vCPU charges
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = pie
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = dvvy
request.ui_dispatch_view = search
search = index=dvvy_usage_summary dimension="licenseGB"\
| bin _time span=1d\
| lookup dvvyData idx st OUTPUT group\
| stats sum(totalLicenseGB) AS licenseGB BY _time group idx st\
| sort 0 + _time group\
| appendcols \
    [search index=dvvy_event_summary | bin _time span=1d | stats values(pct) AS pctEvents by _time group idx st | sort 0 + _time group]\
| eval licenseGB = round(licenseGB * pctEvents, 10)\
| stats sum(licenseGB) AS licenseGB BY _time group\
| eventstats sum(licenseGB) AS totalLicenseGB\
| eval pctTotalLicense = round(licenseGB/totalLicenseGB,10)\
| eval searchRuntime=0\
| join type=outer group [search index=dvvy_charge_summary dimension="search" | bin _time span=1d | eventstats max(totalSearchRuntime) AS searchRuntime BY group]\
| lookup dvvyGroups group OUTPUT costVCPU vcpuEntitlement\
| eval vcpuEntitlement=0\
| appendcols [|inputlookup dvvyConfig | table chargeModeVCPU]\
| eval pctSearch = searchRuntime/totalSearchRuntime\
| appendcols [search index=dvvy_usage_summary dimension="vCPU" | eval role="indexer" | lookup dvvySplunkEnvironment guid role OUTPUT role vCPU | stats sum(instanceAvgUseVCPU) AS idxTotalAvgUseVCPU BY role | table idxTotalAvgUseVCPU]\
| appendcols [search index=dvvy_usage_summary dimension="vCPU" | eval role="search_head" | lookup dvvySplunkEnvironment guid role OUTPUT role vCPU | stats sum(instanceAvgUseVCPU) AS shTotalAvgUseVCPU BY role | table shTotalAvgUseVCPU] \
| appendcols [|inputlookup dvvySplunkEnvironment | search role="indexer" | stats sum(vCPU) AS idxTotalVCPU | table idxTotalVCPU]\
| appendcols [|inputlookup dvvySplunkEnvironment | search role="search_head" | stats sum(vCPU) AS shTotalVCPU | table shTotalVCPU]\
| filldown idxTotalVCPU shTotalVCPU chargeModeVCPU idxTotalAvgUseVCPU shTotalAvgUseVCPU\
| eval totalAvgUseVCPU = idxTotalAvgUseVCPU + shTotalAvgUseVCPU, licenseVCPU = round(pctTotalLicense * totalAvgUseVCPU, 10), searchVCPU = round(searchRuntime / (shTotalVCPU * 86400) * shTotalAvgUseVCPU, 10), totalVCPU = licenseVCPU + searchVCPU, vcpuChargeValue = case(chargeModeVCPU == "over_entitlement", totalVCPU - vcpuEntitlement, chargeModeVCPU == "simple", totalVCPU, isnull(chargeModeVCPU), totalVCPU), vcpuChargeValue = if(vcpuChargeValue <= 0, 0, totalVCPU), chargeVCPU = round(costVCPU * vcpuChargeValue, 2), dimension="vCPU"\
| fillnull value=0\
| table _time group licenseGB totalLicenseGB pctTotalLicense searchRuntime totalSearchRuntime pctSearch idxTotalAvgUseVCPU shTotalAvgUseVCPU totalAvgUseVCPU idxTotalVCPU shTotalVCPU chargeModeVCPU vcpuChargeValue licenseVCPU searchVCPU totalVCPU vcpuEntitlement vcpuChargeValue costVCPU chargeVCPU dimension\
| collect index=dvvy_charge_summary

[Cost Summary - Flat Admin Fee]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 01 5 * * *
description = Populate dvvy_charge_summary with flat admin charges
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = dvvy
request.ui_dispatch_view = search
search = | inputlookup dvvyGroups\
| stats count BY group\
| appendcols [| inputlookup dvvyConfig | rename splunkAdminFlat AS chargeAdminFlat | table chargeAdminFlat]\
| eval yesterday=relative_time(now(), "-1d"), _time=strftime(yesterday, "%m/%d/%Y %H:%M:%S"), dimension="adminFlat"\
| filldown\
| table _time group dimension chargeAdminFlat\
| collect index=dvvy_charge_summary

[Cost Summary - Forwarders]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 47 3 * * *
description = Populate dvvy_charge_summary with forwarder charges
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = roi
request.ui_dispatch_view = search
search = index=dvvy_usage_summary dimension="forwarder"\
| lookup dvvyGroups group OUTPUT costForwarder \
| sort 0 + group\
| eval forwarderCharge = round((forwarderCount * costForwarder)/100,2), dimension="forwarder"\
| table _time group forwarderCount costForwarder forwarderCharge dimension\
| collect index=dvvy_charge_summary

[Cost Summary - Indexer Simple]
action.email.useNSSubject = 1
action.summary_index = 1
alert.track = 0
cron_schedule = 07 4 * * *
description = Populate dvvy_charge_summary with IDXL charges
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_view = search
search = index=dvvy_usage_summary dimension="licenseGB"\
| bin _time span=1d \
| stats sum(totalLicenseGB) AS dailyTotalLicenseGB BY _time idx st\
| lookup dvvyData idx st OUTPUT group\
| mvexpand group\
| dedup group idx st\
| lookup dvvyGroups group OUTPUT costIndexer\
| sort 0 + group\
| appendcols [search index=dvvy_event_summary | stats values(pct) AS pct by _time group idx st | sort 0 + group]\
| appendcols [| inputlookup dvvyConfig | head 1 | table indexerTargetGB]\
| lookup dvvyData group idx st OUTPUT costCenter\
| eval dailyTotalLicenseGB=dailyTotalLicenseGB*pct, dailyPercent=pct * 100, dimension="indexerSimple"\
| filldown indexerTargetGB\
| eval indexerResources=dailyTotalLicenseGB/indexerTargetGB\
| eval indexerCharge = round((indexerResources * costIndexer),2)\
| table _time group costCenter idx st dailyTotalLicenseGB indexerTargetGB indexerResources dailyPercent costIndexer indexerCharge dimension\
| fillnull value=0 indexerCharge\
| collect index=dvvy_charge_summary

[Cost Summary - License GB]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 07 2 * * *
description = Populate dvvy_charge_summary with license charges
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = roi
request.ui_dispatch_view = search
search = index="dvvy_usage_summary" dimension="licenseGB"\
| bin _time span=1d \
| stats sum(totalLicenseGB) AS dailyTotalLicenseGB BY _time idx st\
| lookup dvvyData idx st OUTPUT group\
| mvexpand group\
| dedup group idx st\
| lookup dvvyGroups group OUTPUT costLicenseGB licenseEntitlementGB\
| sort 0 + group\
| appendcols [search index=dvvy_event_summary | stats values(pct) AS pct by _time group idx st | sort 0 + group]\
| lookup dvvyData group idx st OUTPUT costCenter\
| appendcols [| inputlookup dvvyConfig | table chargeModeLicenseGB]\
| filldown chargeModeLicenseGB\
| eval dataSources = idx . "_" . st\
| eval dailyTotalLicenseGB=dailyTotalLicenseGB*pct\
| streamstats sum(dailyTotalLicenseGB) AS cumulativeDailyTotalLicenseGB BY group\
| eval licenseOverEntitlement = round(tonumber(trim(cumulativeDailyTotalLicenseGB)) - tonumber(trim(licenseEntitlementGB)),10), \
    licenseOverEntitlement = if(licenseOverEntitlement <= 0, 0, licenseOverEntitlement), licenseChargeValue = case(chargeModeLicenseGB == "over_entitlement", licenseOverEntitlement, chargeModeLicenseGB == "simple", dailyTotalLicenseGB, isnull(chargeModeLicenseGB), dailyTotalLicenseGB),\
    licenseCharge = round(tonumber(trim(costLicenseGB)) * tonumber(trim(licenseChargeValue)) * pct, 2), \
    dailyPercent=pct * 100,\
    dimension="licenseGB"\
| table _time group idx st cumulativeDailyTotalLicenseGB licenseEntitlementGB dailyTotalLicenseGB dailyPercent costCenter chargeModeLicenseGB licenseChargeValue licenseOverEntitlement costLicenseGB licenseCharge dimension\
| collect index=dvvy_charge_summary

[Cost Summary - RT Search]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 07 3 * * *
description = Populate dvvy_charge_summary with real-time search charges
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = dvvy
request.ui_dispatch_view = search
search = index="dvvy_usage_summary" dimension="search" isRealtime="1"\
| bin _time span=1d\
| rename user AS title\
| join type=left max=0 title [| rest /services/authentication/users splunk_server=local | mvexpand roles | table title roles]\
| rename roles AS splunkRole\
| join type=left max=0 splunkRole [| inputlookup dvvyGroups | makemv delim="," splunkRole | rex field=splunkRole mode=sed "s/\s//g" | mvexpand splunkRole | table group splunkRole rtSearchTimeEntitlement costRTSearchTime]\
| stats sum(searchRuntime) AS totalSearchRuntime BY _time group rtSearchTimeEntitlement costRTSearchTime isRealtime splunkRole\
| appendcols [| inputlookup dvvyConfig | table chargeModeRTSearchRuntime]\
| filldown chargeModeSearchRuntime\
| eval searchTimeEntitlement = tonumber(trim(rtSearchTimeEntitlement)), costSearchTime = tonumber(trim(costRTSearchTime)),\
runtimeOverEntitlement = totalSearchRuntime - searchTimeEntitlement, runtimeOverEntitlement = if(runtimeOverEntitlement < 0, 0, runtimeOverEntitlement),\
runtimeChargeValue = case(chargeModeRTSearchRuntime == "over_entitlement", runtimeOverEntitlement, chargeModeRTSearchRuntime == "simple", totalSearchRuntime),\
rtSearchCharge = round(costSearchTime * runtimeChargeValue, 2), _time=if(isnull(_time), relative_time(now(),"-1d"), _time), dimension="rtSearch"\
| table _time searchTimeEntitlement group splunkRole isRealtime totalSearchRuntime searchTimeEntitlement runtimeOverEntitlement chargeModeRTSearchRuntime runtimeChargeValue costSearchTime rtSearchCharge dimension\
| fillnull value=0 rtSearchCharge\
| collect index=dvvy_charge_summary

[Cost Summary - Search]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 47 2 * * *
description = Populate dvvy_charge_summary with search charges
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = dvvy
request.ui_dispatch_view = search
search = index="dvvy_usage_summary" dimension="search" isRealtime="0"\
| bin _time span=1d\
| rename user AS title\
| join type=left max=0 title [| rest /services/authentication/users splunk_server=local | mvexpand roles | table title roles]\
| rename roles AS splunkRole\
| join type=left max=0 splunkRole [| inputlookup dvvyGroups | makemv delim="," splunkRole | rex field=splunkRole mode=sed "s/\s//g" | mvexpand splunkRole | table group splunkRole searchTimeEntitlement costSearchTime]\
| stats sum(searchRuntime) AS totalSearchRuntime BY _time group splunkRole searchTimeEntitlement costSearchTime isRealtime\
| appendcols [| inputlookup dvvyConfig | table chargeModeSearchRuntime]\
| filldown chargeModeSearchRuntime\
| eval searchTimeEntitlement = tonumber(trim(searchTimeEntitlement)), costSearchTime = tonumber(trim(costSearchTime)),\
runtimeOverEntitlement = totalSearchRuntime - searchTimeEntitlement, runtimeOverEntitlement = if(runtimeOverEntitlement < 0, 0, runtimeOverEntitlement),\
runtimeChargeValue = case(chargeModeSearchRuntime == "over_entitlement", runtimeOverEntitlement, chargeModeSearchRuntime == "simple", totalSearchRuntime),\
searchCharge = round(costSearchTime * runtimeChargeValue, 2), _time=if(isnull(_time), relative_time(now(),"-1d"), _time), dimension="search"\
| table _time searchTimeEntitlement group splunkRole isRealtime totalSearchRuntime searchTimeEntitlement runtimeOverEntitlement chargeModeSearchRuntime runtimeChargeValue costSearchTime searchCharge dimension\
| fillnull value=0 searchCharge\
| collect index=dvvy_charge_summary

[Cost Summary - Storage]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 27 2 * * *
description = Populate dvvy_charge_summary with storage charges
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = roi
request.ui_dispatch_view = search
search = index="dvvy_usage_summary" dimension="storage"\
| bin _time span=1d \
| stats values by _time idx state totalTB \
| lookup dvvyData idx OUTPUT st group\
| mvexpand group\
| mvexpand st\
| dedup group idx st state totalTB\
| sort 0 + group\
| appendcols [search index=dvvy_event_summary | stats values(pct) AS pct by _time group idx st | sort 0 + group]\
| lookup dvvyData group idx st OUTPUT costCenter\
| lookup dvvyGroups group OUTPUT costStorageColdTB costStorageHotWarmTB storageEntitlementTB\
| appendcols [| inputlookup dvvyConfig | table chargeModeStorageTB]\
| filldown chargeModeStorageTB\
| eval totalTB=totalTB*pct\
| streamstats sum(totalTB) AS cumulativeTotalTB BY group\
| eval costStorageTB=case(state=="hot/warm",costStorageHotWarmTB,state=="cold",costStorageColdTB), storageOverEntitlement = round(tonumber(trim(cumulativeTotalTB)) - tonumber(trim(storageEntitlementTB)),10), storageOverEntitlement = if(storageOverEntitlement <= 0, 0, storageOverEntitlement), storageChargeValue = case(chargeModeStorageTB == "over_entitlement", storageOverEntitlement, storageModeLicenseGB == "simple", totalTB, isnull(storageModeLicenseGB), totalTB),\
    storageCharge=case(state=="hot/warm", round(tonumber(trim(storageChargeValue)) * tonumber(trim(costStorageHotWarmTB)) * pct, 2), state=="cold", round(tonumber(trim(storageChargeValue)) * tonumber(trim(costStorageColdTB)) * pct, 2)),\
    dailyPercent=pct, dimension="storage"\
| table _time group storageEntitlementTB costCenter idx st state cumulativeTotalTB totalTB dailyPercent chargeModeStorageTB storageOverEntitlement costStorageTB storageCharge dimension\
| fillnull value=0 storageCharge\
| collect index=dvvy_charge_summary

[KV - Splunk Infrastructure]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 55 23 * * *
description = Populate dvvySplunkEnvironment kv store collection with infrastructure details
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = pie
display.visualizations.show = 0
request.ui_dispatch_app = dvvy
request.ui_dispatch_view = search
search = index=_introspection component=Hostwide earliest=@d latest=now \
[| rest /services/server/info\
| mvexpand server_roles\
| where server_roles == "indexer"\
| append [| rest splunk_server=local /services/shcluster/member/members | stats count by label title | eval server_roles="search_head" | rename label AS host title AS guid]\
| table host]\
| spath *\
| stats max(data.virtual_cpu_count) AS vCPU BY host data.instance_guid\
| rename data.instance_guid AS guid\
| join guid type=outer [| rest /services/server/info | mvexpand server_roles | where server_roles == "indexer"]\
| rename server_roles AS role\
| fillnull role value=search_head\
| table host guid role vCPU\
| outputlookup dvvySplunkEnvironment

[KV - Track Data]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 5 23 * * *
description = Add data sources to dvvyData to enabling tracking
dispatch.earliest_time = @d
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = dvvy
request.ui_dispatch_view = search
search = | tstats c where index=* by `CUSTOMER_IDENTIFIER` index sourcetype\
| rename `CUSTOMER_IDENTIFIER` AS group index AS idx sourcetype AS st\
| dedup group idx st\
| fields - c \
| eval _time=now(), costCenter="default"\
| rename _time AS timestamp\
| table idx st group costCenter timestamp\
| search NOT [| inputlookup dvvyData | table group idx st]\
| outputlookup append=true dvvyData

[Migrate Charge Summaries]
action.email.useNSSubject = 1
alert.track = 0
description = Migrate all data from dvvy_*_cost_summary indexes dvvy_charge_summary index.
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.show = 0
request.ui_dispatch_app = dvvy
request.ui_dispatch_view = search
search = | multisearch \
    [search index=dvvy_admin_cost_summary | eval dimension="admin" | fields - _raw]\
    [search index=dvvy_cpu_cost_summary | eval dimension="vCPU" | fields - _raw]\
    [search index=dvvy_forwarder_cost_summary | eval dimension="forwarder" | fields - _raw]\
    [search index=dvvy_indexer_cost_summary | eval dimension="indexerSimple" | fields - _raw]\
    [search index=dvvy_license_cost_summary | eval dimension="licenseGB" | fields - _raw]\
    [search index=dvvy_search_cost_summary isRealtime=0 | eval dimension="search" | fields - _raw]\
    [search index=dvvy_search_cost_summary isRealtime=1 | eval dimension="rtSearch" | fields - _raw]\
    [search index=dvvy_storage_cost_summary | eval dimension="storage" | fields - _raw]\
| table *\
| collect index="dvvy_charge_summary"

[Migrate Usage Summaries]
action.email.useNSSubject = 1
alert.track = 0
description = Migrate all data from dvvy_*_summary indexes to the dvvy_usage_summary index.
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.show = 0
request.ui_dispatch_app = dvvy
request.ui_dispatch_view = search
search = | multisearch \
    [search index=dvvy_forwarder_summary | eval dimension="forwarder" | fields - _raw]\
    [search index=dvvy_infrastructure_summary | eval dimension="vCPU" | fields - _raw]\
    [search index=dvvy_license_summary | eval dimension="licenseGB" | fields - _raw]\
    [search index=dvvy_search_summary isRealtime=0 | eval dimension="search" | fields - _raw]\
    [search index=dvvy_search_summary isRealtime=1 | eval dimension="rtSearch" | fields - _raw]\
    [search index=dvvy_storage_summary | eval dimension="storage" | fields - _raw]\
    [search index=dvvy_admin_summary adminForwarderPercent=* | eval dimension="adminForwarder" | fields - _raw]\
    [search index=dvvy_admin_summary adminStoragePercent=* | eval dimension="adminStorage" | fields - _raw]\
    [search index=dvvy_admin_summary adminLicensePercent=* | eval dimension="adminLicense" | fields - _raw]\
    [search index=dvvy_admin_summary adminUserPercent=* | eval dimension="adminLicense" | fields - _raw]\
| table *\
| collect index="dvvy_usage_summary"

[Report - Over Entitlement - CPU]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 30 8 * * *
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = pie
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = dvvy
request.ui_dispatch_view = search
search = index=dvvy_charge_summary dimension="vCPU"\
| bin _time span=1d\
| stats max(totalVCPU) AS totalVCPU BY _time group vcpuEntitlement\
| where totalVCPU > vcpuEntitlement

[Report - Over Entitlement - License GB]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 0 8 * * *
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = pie
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = dvvy
request.ui_dispatch_view = search
search = index=dvvy_charge_summary dimension="licenseGB"\
| bin _time span=1d\
| stats sum(dailyTotalLicenseGB) AS dailyTotalLicenseGB BY _time group licenseEntitlementGB\
| where dailyTotalLicenseGB > licenseEntitlementGB

[Report - Over Entitlement - RT Search Runtime]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 0 9 * * *
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = pie
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = dvvy
request.ui_dispatch_view = search
search = index=dvvy_charge_summary dimension="rtSearch"\
| where runtimeOverEntitlement > 0\
| lookup dvvyGroups group OUTPUT rtSearchTimeEntitlement\
| bin _time span=1d \
| stats sum(runtimeOverEntitlement) AS totalRuntimeOverEntitlement BY _time group rtSearchTimeEntitlement

[Report - Over Entitlement - Search Runtime]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 45 8 * * *
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
display.visualizations.charting.chart = pie
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = dvvy
request.ui_dispatch_view = search
search = index=dvvy_charge_summary dimension="search"\
| where runtimeOverEntitlement > 0\
| lookup dvvyGroups group OUTPUT searchTimeEntitlement\
| bin _time span=1d \
| stats sum(runtimeOverEntitlement) AS totalRuntimeOverEntitlement BY _time group searchTimeEntitlement

[Report - Over Entitlement - Storage TB]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 15 8 * * *
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = pie
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = dvvy
request.ui_dispatch_view = search
search = index=dvvy_charge_summary dimension="storage"\
| bin _time span=1d\
| stats sum(totalTB) AS totalTB BY _time group storageEntitlementTB\
| where totalTB > storageEntitlementTB

[Report - Untagged Data]
action.email.useNSSubject = 1
alert.track = 0
description = Indexed data without an org_id
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = dvvy
request.ui_dispatch_view = search
search = | tstats latest(_time) AS latest_event count where index=* sourcetype!=stash BY index sourcetype\
| eval latest_event=strftime(latest_event, "%Y-%m-%d %H:%M:%S") \
| search NOT\
    [| inputlookup dvvyData \
    |  rename idx AS index st AS sourcetype\
    | table index sourcetype]

[Utilization Summary - Admin - Forwarders]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 41 4 * * *
description = Populate dvvy_usage_summary with admin forwarder workload
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = dvvy
request.ui_dispatch_view = search
search = index=dvvy_charge_summary dimension="forwarder"\
| bin _time span=1d \
| stats sum(forwarderCount) AS forwarderCount BY _time group\
| appendcols [| inputlookup dvvyConfig | table splunkAdminForwarder]\
| filldown splunkAdminForwarder\
| sort 0 + group\
| eval splunkAdminForwarder=replace(splunkAdminForwarder,"\s+",""), adminForwarderPercent=round(forwarderCount/splunkAdminForwarder, 2), dimension="adminForwarder"\
| table _time group forwarderCount splunkAdminForwarder adminForwarderPercent dimension\
| collect index=dvvy_usage_summary

[Utilization Summary - Admin - License GB]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 11 4 * * *
description = Populate dvvy_usage_summary with admin license workload
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = dvvy
request.ui_dispatch_view = search
search = index=dvvy_charge_summary dimension="licenseGB"\
| bin _time span=1d \
| stats sum(dailyTotalLicenseGB) AS dailyTotalLicenseGB BY _time group\
| appendcols [| inputlookup dvvyConfig | table splunkAdminLicenseGB]\
| filldown splunkAdminLicenseGB\
| eval splunkAdminLicenseGB=replace(splunkAdminLicenseGB,"\s+",""), adminLicensePercent = round(dailyTotalLicenseGB / splunkAdminLicenseGB, 2), dimension="adminLicense"\
| table _time group dailyTotalLicenseGB splunkAdminLicenseGB adminLicensePercent dimension\
| collect index=dvvy_usage_summary

[Utilization Summary - Admin - Storage]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 21 4 * * *
description = Populate dvvy_usage_summary with admin storage workload
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = dvvy
request.ui_dispatch_view = search
search = index=dvvy_charge_summary dimension="storage"\
| bin _time span=1d \
| stats sum(totalTB) AS totalTB by _time group\
| appendcols [| inputlookup dvvyConfig | table splunkAdminStorageTB]\
| filldown splunkAdminStorageTB\
| sort 0 + group\
| eval splunkAdminStorageTB=replace(splunkAdminStorageTB,"\s+",""), adminStoragePercent = round(totalTB/splunkAdminStorageTB, 2), dimension="adminStorage"\
| table _time group totalTB splunkAdminStorageTB adminStoragePercent dimension\
| collect index=dvvy_usage_summary

[Utilization Summary - Admin - Users]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 31 4 * * *
description = Populate dvvy_usage_summary with admin user workload
dispatch.earliest_time = @d
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = dvvy
request.ui_dispatch_view = search
search = | rest /services/authentication/users splunk_server=local \
| search *\
[| inputlookup dvvyGroups | table splunkRole | makemv delim="," splunkRole | rex field=splunkRole mode=sed "s/\s//g" | mvexpand splunkRole | rename splunkRole AS roles]\
| fields title roles realname\
| rename title AS user roles AS role\
| stats dc(user) AS userCount by role\
| rename role AS splunkRole\
| join type=left splunkRole [| inputlookup dvvyGroups | makemv delim="," splunkRole | rex field=splunkRole mode=sed "s/\s//g" | mvexpand splunkRole | table group splunkRole]\
| stats sum(userCount) AS userCount by group\
| appendcols [| inputlookup dvvyConfig | table splunkAdminUsers]\
| filldown splunkAdminUsers\
| eval splunkAdminUsers=replace(splunkAdminUsers,"\s+",""), adminUserPercent = round((userCount / splunkAdminUsers), 2), _time=relative_time(now(),"-1d"), dimension="adminUser"\
| bin _time span=1d \
| table _time group userCount splunkAdminUsers adminUserPercent dimension\
| collect index=dvvy_usage_summary

[Utilization Summary - CPU]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 23 1 * * *
description = Populate dvvy_usage_summary with vCPU utilization
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
display.visualizations.type = singlevalue
enableSched = 1
request.ui_dispatch_app = dvvy
request.ui_dispatch_view = search
search = index=_introspection component=Hostwide\
| spath *\
| rename data.instance_guid AS guid data.cpu_system_pct AS cpu_system_pct data.cpu_user_pct AS cpu_user_pct data.cpu_count AS physical_cpu_count data.virtual_cpu_count AS virtual_cpu_count \
| eval pctCPU = cpu_system_pct + cpu_user_pct\
| bin _time span=1d\
| stats min(pctCPU) AS minPctCPU median(pctCPU) AS medianPctCPU avg(pctCPU) AS avgPctCPU max(pctCPU) AS maxPctCPU max(virtual_cpu_count) AS virtual_cpu_count BY _time guid\
| eval instanceAvgUseVCPU = round((virtual_cpu_count * avgPctCPU) / 100, 5), dimension="vCPU"\
| fields - virtual_cpu_count\
| collect index=dvvy_usage_summary

[Utilization Summary - Events]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 07 0 * * *
description = Populate dvvy_event_summary with event counts
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = dvvy
request.ui_dispatch_view = search
search = | tstats c AS cGroupEvents WHERE index=* BY _time span=1d `CUSTOMER_IDENTIFIER` index sourcetype\
| join _time index sourcetype [| tstats c AS cTotalEvents WHERE index=* BY _time span=1d index sourcetype]\
| rename `CUSTOMER_IDENTIFIER` AS group index AS idx sourcetype AS st\
| eval pct = round((cGroupEvents/cTotalEvents), 4)\
| sort - _time\
| collect index=dvvy_event_summary

[Utilization Summary - Forwarders]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 43 0 * * *
description = Populate dvvy_uage_summary with forwarder utilization
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = dvvy
request.ui_dispatch_view = search
search = | tstats dc(host) AS forwarderCount where index=* by  _time span=1d `CUSTOMER_IDENTIFIER`\
| rename `CUSTOMER_IDENTIFIER` AS group\
| fields - c\
| eval dimension="forwarder"\
| collect index=dvvy_usage_summary

[Utilization Summary - License GB]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 01 * * * *
description = Populate dvvy_usage_summary with license utilization
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_view = search
search = index=_internal sourcetype=splunkd component=LicenseUsage type=Usage\
    [| inputlookup dvvyData\
    | dedup idx st\
    | table idx st]\
| bin _time span=1d \
| eval license_gb=round(b/1024/1024/1024,10)\
| stats sum(license_gb) AS totalLicenseGB BY _time idx st\
| eval dimension="licenseGB"\
| table _time dimension idx st totalLicenseGB\
| collect index=dvvy_usage_summary

[Utilization Summary - Search]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 03 1 * * *
description = Populate dvvy_usage_summary with search utilization
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = dvvy
request.ui_dispatch_view = search
search = index=_audit info=completed `SEARCH_UTILIZATION_EXCLUDE`\
| stats count by _time search_id user savedsearch_name is_realtime total_run_time\
| rename search_id AS searchId savedsearch_name AS searchName is_realtime AS isRealtime total_run_time AS searchRuntime\
| eval dimension="search"\
| fields - count\
| collect index=dvvy_usage_summary

[Utilization Summary - Storage]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 23 0 * * *
description = Populate dvvy_usage_summary with storage utilization
dispatch.earliest_time = 0
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_view = search
search = | dbinspect\
    [| inputlookup dvvyData\
    | rename idx AS index\
    | table index]\
| eval state=if(state=="hot" OR state=="warm","hot/warm",state)\
| stats sum(sizeOnDiskMB) AS sizeOnDiskMB BY index state\
| eval totalTB=sizeOnDiskMB/1024/1024, _time=relative_time(now(),"-1d"), dimension="storage"\
| bin _time span=1d \
| rename index AS idx\
| table _time idx state totalTB dimension\
| collect index=dvvy_usage_summary

